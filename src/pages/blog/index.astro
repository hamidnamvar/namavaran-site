---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import { Icon } from 'astro-icon/components';

// Get all blog posts and sort by date (newest first)
const blogPosts = await getCollection('blog');
const sortedPosts = blogPosts.sort((a, b) => 
  new Date(b.data.date).getTime() - new Date(a.data.date).getTime()
);

// Calculate reading time
function calculateReadingTime(content: string): number {
  const wordsPerMinute = 200;
  const words = content.trim().split(/\s+/).length;
  return Math.ceil(words / wordsPerMinute);
}

// Get featured post (most recent)
const featuredPost = sortedPosts[0];
const otherPosts = sortedPosts.slice(1);

// Get all unique tags
const allTags = Array.from(
  new Set(blogPosts.flatMap(post => post.data.tags))
).sort();
---

<Layout title="Blog - Payflo" description="Insights, updates, and thought leadership from the Payflo team on payroll, embedded finance, and the future of work.">
  <!-- Hero Section -->
  <section class="relative py-20 md:py-32 bg-gradient-to-b from-payflo-gray/50 to-white overflow-hidden">
    <div class="absolute inset-0 bg-[url('/grid-pattern.svg')] opacity-5" aria-hidden="true"></div>
    <div class="container-custom relative">
      <div class="max-w-4xl mx-auto text-center">
        <h1 class="text-4xl md:text-6xl font-bold leading-tight mb-8 animate-on-scroll">
          The Payflo <span class="gradient-text">Blog</span>
        </h1>
        <p class="text-xl text-gray-600 max-w-2xl mx-auto animate-on-scroll delay-1">
          Insights, updates, and thought leadership from our team on payroll, embedded finance, and the future of work.
        </p>
      </div>
    </div>
  </section>

  <!-- Featured Post -->
  {featuredPost && (
    <section class="py-16 bg-white">
      <div class="container-custom">
        <div class="mb-12">
          <h2 class="text-2xl font-bold mb-4 animate-on-scroll">Featured Article</h2>
        </div>
        
        <article class="grid grid-cols-1 lg:grid-cols-2 gap-12 items-center animate-on-scroll delay-1">
          <div class="hover-zoom rounded-2xl overflow-hidden shadow-lg">
            <img 
              src={featuredPost.data.image} 
              alt={`Featured image for ${featuredPost.data.title}`}
              class="w-full h-auto transition-all duration-500"
            />
          </div>
          
          <div>
            <div class="flex flex-wrap gap-2 mb-4">
              {featuredPost.data.tags.map((tag: string) => (
                <span class="px-3 py-1 bg-rich-green/10 text-rich-green rounded-full text-sm font-medium">
                  {tag}
                </span>
              ))}
            </div>
            
            <h3 class="text-3xl md:text-4xl font-bold mb-4 leading-tight">
              <a 
                href={`/blog/${featuredPost.id}`}
                class="hover:text-rich-green focus:text-rich-green transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-rich-green focus:ring-offset-4 rounded"
              >
                {featuredPost.data.title}
              </a>
            </h3>
            
            <p class="text-lg text-gray-600 mb-6 leading-relaxed">
              {featuredPost.data.excerpt}
            </p>
            
            <div class="flex flex-wrap items-center gap-6 mb-8">
              <div class="flex items-center">
                <img 
                  src={featuredPost.data.authorAvatar} 
                  alt={`${featuredPost.data.author}, ${featuredPost.data.authorRole}`}
                  class="w-10 h-10 rounded-full mr-3 border-2 border-white shadow-md"
                />
                <div>
                  <p class="font-semibold text-sm">{featuredPost.data.author}</p>
                  <p class="text-xs text-gray-600">{featuredPost.data.authorRole}</p>
                </div>
              </div>
              
              <div class="flex items-center text-gray-600 text-sm">
                <Icon name="ph:calendar-duotone" class="h-4 w-4 mr-2" aria-hidden="true" />
                <time datetime={featuredPost.data.date}>{featuredPost.data.date}</time>
              </div>
              
              <div class="flex items-center text-gray-600 text-sm">
                <Icon name="ph:clock-duotone" class="h-4 w-4 mr-2" aria-hidden="true" />
                <span>{calculateReadingTime(featuredPost.data.content)} min read</span>
              </div>
            </div>
            
            <a 
              href={`/blog/${featuredPost.id}`} 
              class="btn btn-primary inline-flex items-center group focus:outline-none focus:ring-2 focus:ring-rich-green focus:ring-offset-2"
              aria-label={`Read full article: ${featuredPost.data.title}`}
            >
              Read Full Article
              <Icon name="ph:arrow-right" class="h-4 w-4 ml-2 group-hover:translate-x-1 group-focus:translate-x-1 transition-transform duration-200" aria-hidden="true" />
            </a>
          </div>
        </article>
      </div>
    </section>
  )}

  <!-- Filter by Tags -->
  <section class="py-8 bg-payflo-gray/50 border-t border-gray-200">
    <div class="container-custom">
      <div class="flex flex-wrap items-center gap-4">
        <span class="text-sm font-medium text-gray-700">Filter by topic:</span>
        <div class="flex flex-wrap gap-2" role="group" aria-label="Filter articles by topic">
          <button 
            class="filter-tag px-3 py-1 bg-white text-gray-700 rounded-full text-sm border border-gray-200 hover:bg-rich-green hover:text-white focus:bg-rich-green focus:text-white transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-rich-green focus:ring-offset-2"
            data-tag="all"
            aria-pressed="true"
          >
            All Posts
          </button>
          {allTags.map((tag: string) => (
            <button 
              class="filter-tag px-3 py-1 bg-white text-gray-700 rounded-full text-sm border border-gray-200 hover:bg-rich-green hover:text-white focus:bg-rich-green focus:text-white transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-rich-green focus:ring-offset-2"
              data-tag={tag.toLowerCase()}
              aria-pressed="false"
            >
              {tag}
            </button>
          ))}
        </div>
      </div>
    </div>
  </section>

  <!-- All Posts Grid -->
  <section class="py-20">
    <div class="container-custom">
      <div class="mb-12">
        <h2 class="text-2xl font-bold mb-4 animate-on-scroll">Latest Articles</h2>
      </div>
      
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8" id="posts-grid">
        {otherPosts.map((post, index) => (
          <article 
            class={`blog-post-card group animate-on-scroll delay-${Math.min(index + 1, 5)}`}
            data-tags={post.data.tags.map(tag => tag.toLowerCase()).join(',')}
          >
            <a 
              href={`/blog/${post.id}`}
              class="block bg-white rounded-xl overflow-hidden shadow-sm hover:shadow-lg focus:shadow-lg transition-all duration-300 hover:-translate-y-1 focus:-translate-y-1 focus:outline-none focus:ring-2 focus:ring-rich-green focus:ring-offset-2"
            >
              <div class="aspect-video overflow-hidden">
                <img 
                  src={post.data.image} 
                  alt={`Featured image for ${post.data.title}`}
                  class="w-full h-full object-cover transform group-hover:scale-105 group-focus:scale-105 transition-transform duration-300"
                  loading="lazy"
                />
              </div>
              
              <div class="p-6">
                <div class="flex flex-wrap gap-2 mb-3">
                  {post.data.tags.map((tag: string) => (
                    <span class="px-2 py-1 bg-rich-green/10 text-rich-green rounded-full text-xs font-medium">
                      {tag}
                    </span>
                  ))}
                </div>
                
                <h3 class="font-semibold text-lg mb-3 group-hover:text-rich-green group-focus:text-rich-green transition-colors duration-200 line-clamp-2">
                  {post.data.title}
                </h3>
                
                <p class="text-sm text-gray-600 mb-4 line-clamp-3">
                  {post.data.excerpt}
                </p>
                
                <div class="flex flex-wrap items-center gap-4 text-xs text-gray-500">
                  <div class="flex items-center">
                    <img 
                      src={post.data.authorAvatar} 
                      alt={`${post.data.author}, ${post.data.authorRole}`}
                      class="w-6 h-6 rounded-full mr-2"
                      loading="lazy"
                    />
                    <span>{post.data.author}</span>
                  </div>
                  
                  <div class="flex items-center">
                    <Icon name="ph:calendar-duotone" class="h-3 w-3 mr-1" aria-hidden="true" />
                    <time datetime={post.data.date}>{post.data.date}</time>
                  </div>
                  
                  <div class="flex items-center">
                    <Icon name="ph:clock-duotone" class="h-3 w-3 mr-1" aria-hidden="true" />
                    <span>{calculateReadingTime(post.data.content)} min</span>
                  </div>
                </div>
              </div>
            </a>
          </article>
        ))}
      </div>
      
      <!-- No results message -->
      <div id="no-results" class="hidden text-center py-16">
        <div class="max-w-md mx-auto">
          <Icon name="ph:file-search" class="h-16 w-16 mx-auto text-gray-400 mb-4" aria-hidden="true" />
          <h3 class="text-lg font-semibold text-gray-900 mb-2">No articles found</h3>
          <p class="text-gray-600">Try selecting a different topic or view all posts.</p>
        </div>
      </div>
    </div>
  </section>

  <!-- Newsletter Signup -->
  <section class="py-20 bg-gradient-to-r from-rich-green to-payflo-blue">
    <div class="container-custom text-center">
      <div class="max-w-2xl mx-auto">
        <h2 class="text-3xl md:text-4xl font-bold text-white mb-4 animate-on-scroll">
          Stay Updated
        </h2>
        <p class="text-xl text-white/90 mb-8 animate-on-scroll delay-1">
          Get the latest insights on payroll, embedded finance, and the future of work delivered to your inbox.
        </p>
        
        <form class="flex flex-col sm:flex-row gap-4 max-w-md mx-auto animate-on-scroll delay-2" role="form" aria-label="Newsletter signup">
          <label for="email" class="sr-only">Email address</label>
          <input 
            type="email" 
            id="email"
            name="email"
            placeholder="Enter your email"
            class="flex-1 px-4 py-3 rounded-lg border-0 focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-rich-green focus:outline-none"
            required
            aria-required="true"
          />
          <button 
            type="submit" 
            class="px-6 py-3 bg-white text-rich-green font-medium rounded-lg hover:bg-gray-50 focus:bg-gray-50 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-rich-green"
          >
            Subscribe
          </button>
        </form>
        
        <p class="text-sm text-white/70 mt-4 animate-on-scroll delay-3">
          We respect your privacy. Unsubscribe at any time.
        </p>
      </div>
    </div>
  </section>
</Layout>

<script>
  document.addEventListener('astro:page-load', () => {
    // Tag filtering functionality
    const filterTags = document.querySelectorAll('.filter-tag');
    const postCards = document.querySelectorAll('.blog-post-card');
    const noResults = document.getElementById('no-results');
    
    filterTags.forEach(tag => {
      tag.addEventListener('click', () => {
        const selectedTag = tag.getAttribute('data-tag');
        
        // Update active state
        filterTags.forEach(t => {
          t.classList.remove('bg-rich-green', 'text-white');
          t.classList.add('bg-white', 'text-gray-700');
          t.setAttribute('aria-pressed', 'false');
        });
        
        tag.classList.remove('bg-white', 'text-gray-700');
        tag.classList.add('bg-rich-green', 'text-white');
        tag.setAttribute('aria-pressed', 'true');
        
        // Filter posts
        let visibleCount = 0;
        
        postCards.forEach(card => {
          const cardTags = card.getAttribute('data-tags')?.split(',') || [];
          
          if (selectedTag === 'all' || cardTags.includes(selectedTag)) {
            card.style.display = 'block';
            card.style.animation = 'fadeIn 0.3s ease-in-out';
            visibleCount++;
          } else {
            card.style.display = 'none';
          }
        });
        
        // Show/hide no results message
        if (noResults) {
          if (visibleCount === 0) {
            noResults.classList.remove('hidden');
          } else {
            noResults.classList.add('hidden');
          }
        }
        
        // Announce to screen readers
        const announcement = document.createElement('div');
        announcement.setAttribute('aria-live', 'polite');
        announcement.setAttribute('aria-atomic', 'true');
        announcement.className = 'sr-only';
        announcement.textContent = `Showing ${visibleCount} article${visibleCount !== 1 ? 's' : ''} for ${selectedTag === 'all' ? 'all topics' : selectedTag}`;
        document.body.appendChild(announcement);
        
        setTimeout(() => {
          document.body.removeChild(announcement);
        }, 1000);
      });
    });
    
    // Newsletter form handling
    const newsletterForm = document.querySelector('form[role="form"]');
    if (newsletterForm) {
      newsletterForm.addEventListener('submit', (e) => {
        e.preventDefault();
        
        const emailInput = newsletterForm.querySelector('input[type="email"]') as HTMLInputElement;
        const submitButton = newsletterForm.querySelector('button[type="submit"]') as HTMLButtonElement;
        
        if (emailInput && submitButton) {
          const originalText = submitButton.textContent;
          submitButton.textContent = 'Subscribing...';
          submitButton.disabled = true;
          
          // Simulate API call (replace with actual implementation)
          setTimeout(() => {
            submitButton.textContent = 'Subscribed!';
            emailInput.value = '';
            
            // Announce success to screen readers
            const announcement = document.createElement('div');
            announcement.setAttribute('aria-live', 'polite');
            announcement.setAttribute('aria-atomic', 'true');
            announcement.className = 'sr-only';
            announcement.textContent = 'Successfully subscribed to newsletter';
            document.body.appendChild(announcement);
            
            setTimeout(() => {
              submitButton.textContent = originalText;
              submitButton.disabled = false;
              if (announcement.parentNode) {
                document.body.removeChild(announcement);
              }
            }, 2000);
          }, 1000);
        }
      });
    }
  });
</script>

<style>
  /* Screen reader only class */
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }

  /* Line clamp utilities */
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  /* Fade in animation */
  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
  }
</style>